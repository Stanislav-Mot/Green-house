{"version":3,"sources":["./src/app/components/orders/index.ts","./src/app/components/products/product-page/product-description/product-description.component.ts","./src/app/components/products/product-page/product-description/product-description.component.html","./src/app/components/orders/order-list/order-list.component.ts","./src/app/components/orders/order-list/order-list.component.html","./src/app/components/header/header.component.html","./src/app/components/header/header.component.ts","./src/app/components/users/index.ts","./src/app/components/products/product-create/product-create.component.ts","./src/app/components/products/product-create/product-create.component.html","./src/app/components/categories/index.ts","./src/environments/environment.ts","./src/app/components/dialog/dialog.component.ts","./src/app/components/dialog/dialog.component.html","./src/app/components/users/user-list/user-list.component.ts","./src/app/components/users/user-list/user-list.component.html","./src/app/utils/auth.guard.ts","./src/app/components/categories/category-create/category-create.component.ts","./src/app/components/categories/category-create/category-create.component.html","./src/app/enums/index.ts","./src/app/constants/guard.constants.ts","./src/app/services/params.service.ts","./src/app/components/login/index.ts","./src/app/services/orders.service.ts","./src/app/interceptors/index.ts","./src/app/enums/role.ts","./src/app/components/users/user-page/user-page.component.ts","./src/app/components/users/user-page/user-page.component.html","./src/app/services/products.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/constants/index.ts","./src/app/components/main-page/index.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/components/categories/category-page/category-page.component.ts","./src/app/components/categories/category-page/category-page.component.html","./src/app/components/products/product-page/product-image/product-image.component.ts","./src/app/components/products/product-page/product-image/product-image.component.html","./src/app/components/products/index.ts","./src/app/services/authentication.service.ts","./src/app/components/products/product-page/product-param/product-param.component.ts","./src/app/components/products/product-page/product-param/product-param.component.html","./src/app/services/descriptions.service.ts","./src/app/interceptors/jwt.interceptor.ts","./src/app/components/orders/order-page/order-page.component.html","./src/app/components/orders/order-page/order-page.component.ts","./src/app/components/products/product-page/product-page.component.ts","./src/app/components/products/product-page/product-page.component.html","./src/app/components/categories/category-list/category-list.component.ts","./src/app/components/categories/category-list/category-list.component.html","./src/app/services/index.ts","./src/app/components/main-page/main-page.component.ts","./src/app/components/main-page/main-page.component.html","./src/app/services/user.service.ts","./src/app/components/products/product-list/product-list.component.ts","./src/app/components/products/product-list/product-list.component.html","./src/app/interceptors/error.interceptor.ts","./src/app/components/header/index.ts","./src/app/app-routing.module.ts","./src/app/components/products/product-page/product-info/product-info.component.ts","./src/app/components/products/product-page/product-info/product-info.component.html","./src/app/services/categories.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export * from './order-list/order-list.component';\nexport * from './order-page/order-page.component'","import { Component, OnInit, Input} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { DescriptionsService } from 'src/app/services';\nimport { Description, Product } from 'src/app/models';\nimport { DialogComponent } from './../../../dialog/dialog.component';\n\n@Component({\n    selector: 'app-product-description',\n    templateUrl: 'product-description.component.html',\n    styleUrls: ['product-description.component.scss']\n})\nexport class ProductDescriptonComponent implements OnInit  { \n\n    @Input() product!: Product;\n\n    descriptions!: Description[];\n\n    createForm!: FormGroup;\n\n    updateForm!: FormGroup;\n\n    loading = false;\n\n    submitted = false;\n\n    error = '';\n\n    idProduct!: number;\n\n    panelOpenState: boolean = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private descriptionsService: DescriptionsService,\n        private route: ActivatedRoute,\n        public dialog: MatDialog,\n    ) { \n        this.createForm = this.formBuilder.group({\n            heading: ['', [Validators.required]],\n            text: ['', [Validators.required]]\n        });\n        this.updateForm = this.formBuilder.group({\n            heading: ['', [Validators.required]],\n            text: ['', [Validators.required]]\n        });\n    }\n\n    ngOnInit() {\n        this.idProduct= this.route.snapshot.params.id;\n        this.descriptionsService.getByProductId(this.idProduct).pipe().subscribe((description) => {\n            this.descriptions = description;\n        });\n    }\n\n    get getControls() { return this.createForm.controls; }\n    \n    onSubmit() {\n        this.submitted = true;\n\n        if (this.createForm.invalid) return;\n\n        this.loading = true;\n        \n        this.descriptionsService.create(this.createForm, this.product.id).pipe(first()).subscribe((description) => {\n            this.descriptions.push(description);\n            this.dialog.open(DialogComponent, {\n                width: '250px',\n                data: {message: 'Description added' }\n            });\n            this.createForm.controls.text.setValue('')\n            this.createForm.controls.heading.setValue('')\n        },\n            (error) => { this.error = error;},\n        );\n        this.loading = false;\n    }\n\n    updateDescription(descriptionUpdate: Description){\n        this.submitted = true;\n\n        if (this.updateForm.invalid) return;\n\n        this.loading = true;\n        \n        this.descriptionsService.update(this.updateForm, descriptionUpdate.id).pipe(first()).subscribe((description) => {\n\n            const index: number = this.descriptions.findIndex((x) => x === descriptionUpdate);\n\n            this.descriptions[index] = description;\n\n            this.dialog.open(DialogComponent, {\n                width: '250px',\n                data: {message: 'Description Updated' }\n            });\n\n        },\n            (error) => { this.error = error;},\n        );\n        this.loading = false;\n    }\n\n    deleteDescription(description: Description){\n        const index: number = this.descriptions.findIndex((d) => d === description);\n        this.descriptions.splice(index,1);\n        this.descriptionsService.delete(description.id);\n        this.dialog.open(DialogComponent, {\n            width: '250px',\n            data: {message: 'Successfully deleted' }\n        });\n    }\n\n    togglePanel() {\n        this.panelOpenState = !this.panelOpenState\n    }\n}","<mat-card class=\"example-card\" class=\"prod-app-card\">\n  <mat-card-header>\n    <mat-card-title >Описания</mat-card-title>\n  </mat-card-header>\n\n  <form id=\"create\" class=\"my-form\" [formGroup]=\"createForm\" (ngSubmit)=\"onSubmit()\">  \n\n    <mat-expansion-panel style=\"text-align: center;\">\n      <mat-expansion-panel-header >\n        <mat-panel-title>\n          Создать новое\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n\n      <mat-form-field>\n        <mat-label>Заголовок</mat-label>\n        <input matInput type=\"text\" formControlName=\"heading\" [ngClass]=\"{ 'is-invalid': submitted && getControls.heading.errors }\">\n        <mat-error *ngIf=\"getControls.heading.errors?.required\">заголовок не заполнен</mat-error>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Текст</mat-label>\n        <input matInput type=\"text\" formControlName=\"text\" [ngClass]=\"{ 'is-invalid': submitted && getControls.text.errors }\">\n        <mat-error *ngIf=\"getControls.text.errors?.required\">текст не заполнен</mat-error>\n      </mat-form-field>\n\n      <br>\n      <button mat-button>Добавить</button>\n    </mat-expansion-panel>\n\n</form>\n\n  <div  *ngFor=\"let description of descriptions\" class=\"desc-ell\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\"></div>\n      <mat-card-title>id: {{description?.id}}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <p>\n        заголовок:\n        {{description?.heading}}\n      </p>\n      <p>\n        текст:\n        {{description?.text}}\n      </p>\n    </mat-card-content>\n  <mat-card-actions>\n\n      <button mat-button (click)=\"togglePanel()\" mat-mini-fab color=\"primary\" >\n        <span class=\"material-icons\">file_upload</span>\n      </button>\n      <button mat-button (click)=\"deleteDescription(description)\" mat-mini-fab color=\"primary\" class=\"upload-btn\" style=\"float: right;\">\n        <span class=\"material-icons\">delete_forever</span>\n      </button>\n    </mat-card-actions>\n    <mat-card-actions>\n  \n      <form [attr.id]=\"description.id\" class=\"my-form\" [formGroup]=\"updateForm\" (ngSubmit)=\"updateDescription(description)\">  \n\n          <mat-expansion-panel style=\"text-align: center;\" [expanded]=\"panelOpenState\">\n            <mat-expansion-panel-header style=\"display: none;\">\n              <mat-panel-title>\n                Update\n              </mat-panel-title>\n            </mat-expansion-panel-header>\n      \n            <mat-form-field>\n              <mat-label>Заголовок</mat-label>\n              <input matInput type=\"text\" formControlName=\"heading\" [ngClass]=\"{ 'is-invalid': submitted && getControls.heading.errors }\">\n              <mat-error *ngIf=\"getControls.heading.errors?.required\">заголовк не заполнен</mat-error>\n            </mat-form-field>\n      \n            <mat-form-field>\n              <mat-label>Текст</mat-label>\n              <input matInput type=\"text\" formControlName=\"text\" [ngClass]=\"{ 'is-invalid': submitted && getControls.text?.errors }\">\n              <mat-error *ngIf=\"getControls.text?.errors?.required\">проценты не заполнены</mat-error>\n            </mat-form-field>\n      \n            <br>\n            <button mat-button>Обновить</button>\n          </mat-expansion-panel>\n      \n      </form>\n\n    </mat-card-actions>\n\n  </div>\n</mat-card>","import {\n    Component, ViewChild, OnInit\n   } from \"@angular/core\";\n   import { MatPaginator } from '@angular/material/paginator';\n   import { MatTableDataSource } from '@angular/material/table';\n   import { MatSort } from '@angular/material/sort';\n   import { SelectionModel } from '@angular/cdk/collections';\n   \n   import { Order } from \"src/app/models\";\n   import { OrdersService } from \"src/app/services\";\n   import { Router } from \"@angular/router\";\n@Component({\n    selector: 'app-order-list',\n    templateUrl: 'order-list.component.html',\n    styleUrls: ['order-list.component.scss']\n})\nexport class OrderListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n    @ViewChild(MatSort) sort!: MatSort;\n\n    displayedColumns: string[] = ['id', 'placedAt', 'status', 'address', 'products', 'user', 'select'];\n;\n    orders: Order[] = [];\n\n    dataSource!: MatTableDataSource<Order>;\n\n    selection = new SelectionModel<Order>(true, []);\n\n    constructor(private ordersService: OrdersService, private router: Router) { }\n\n    ngOnInit() {\n        this.ordersService.getAll().pipe().subscribe((orders) => {\n            this.orders = orders;\n            this.dataSource = new MatTableDataSource<Order>(this.orders);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n        });\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n          this.dataSource.paginator.firstPage();\n        }\n    }\n\n    removeSelectedRows() {\n        this.selection.selected.forEach((item) => {\n        const index: number = this.orders.findIndex((d) => d === item);\n        this.orders.splice(index,1);\n        this.ordersService.delete(item.id);\n\n        this.dataSource = new MatTableDataSource<Order>(this.orders);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    });\n    this.selection = new SelectionModel<Order>(true, []);\n    }\n\n    isAllSelected() {\n        const numSelected = this.selection.selected.length;\n        const numRows = this.dataSource.data.length;\n        return numSelected === numRows;\n    }\n\n    masterToggle() {\n        if(this.isAllSelected()) {\n            this.selection.clear()\n        }else {\n            this.dataSource.data.forEach((row) => this.selection.select(row));\n        }\n    }\n\n    navigatePageCategory(id: number) {\n        this.router.navigate([`/orders/${id}`]);\n    }\n\n    navigatePageProduct(id: number) {\n        this.router.navigate([`/products/${id}`]);\n    }\n\n    navigatePageUser(id: number) {\n        this.router.navigate([`/users/${id}`]);\n    }\n}","<mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n  </mat-form-field>\n  \n  <div class=\"mat-elevation-z8\">\n  \n    <button mat-raised-button color=\"primary\" (click)=\"removeSelectedRows()\" class=\"width\">\n      Удалить выбранные строки\n    </button>\n  \n    <table mat-table [dataSource]=\"dataSource\" matSort>\n  \n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Id. </th>\n         \n        <td mat-cell *matCellDef=\"let element\" (click)=\"navigatePageCategory(element.id)\" class=\"padding\" >\n          <button mat-button ><span class=\"material-icons\">edit</span> {{element.id}}</button> \n        </td>\n      </ng-container>\n  \n      <ng-container matColumnDef=\"placedAt\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Размещен </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.placedAt}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Статус </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"address\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Адрес </th>\n        <td mat-cell *matCellDef=\"let element\"></td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"products\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Продукты </th>\n        <td mat-cell *matCellDef=\"let element\">\n            <span *ngFor=\"let product of element.products\">\n              <span  (click)=\"navigatePageProduct(product.id)\">{{product?.id}}, </span>\n            </span>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"user\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Пользователь </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"navigatePageUser(element.user.id)\"> {{element.user?.id}} </td>\n      </ng-container>\n  \n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef class=\"align\">\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell  *matCellDef=\"let row\" class=\"align\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  \n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">Нет данных, соответствующих фильтру \"{{input.value}}\"</td>\n      </tr>\n    </table>\n  \n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n  </div>","<div *ngIf=\"user\" >\n  <mat-toolbar class=\"toolbar-top\">\n      <button type=\"button\" mat-button (click)=\"drawer.toggle()\">\n        <span class=\"material-icons\">\n          menu\n          </span>\n      </button>\n      <span>GREEN HOUSE</span>\n  </mat-toolbar>\n</div>\n\n<mat-drawer-container class=\"example-container\">\n  <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\">\n      <button mat-button routerLink=\"/products\">\n        <span class=\"material-icons\">\n          local_grocery_store\n        </span>\n        Товары</button><br>\n\n      <button mat-button routerLink=\"/categories\">\n        <span class=\"material-icons\">\n          category\n        </span>\n        Категории</button><br>\n\n        <button mat-button routerLink=\"/orders\">\n          <span class=\"material-icons\">\n            add_shopping_cart\n          </span>\n          Заказы</button><br>\n\n      <button mat-button routerLink=\"/users\">\n        <span class=\"material-icons\">\n          supervised_user_circle\n        </span>\n        Пользователи</button><br>\n\n      <button mat-button (click)=\"logout(); drawer.close()\">\n        <span class=\"material-icons\">\n          exit_to_app\n        </span>\n        Выход</button><br>\n    </mat-drawer>\n\n  <mat-drawer-content class=\"example-sidenav-content\">  \n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n\n</mat-drawer-container>","import { Component } from \"@angular/core\";\n\nimport { AuthenticationService, UserService } from \"../../services\";\nimport { Role } from \"../../enums\";\nimport { User } from \"../../models\";\n\n@Component({\n    selector: 'app-header',\n    templateUrl: 'header.component.html',\n    styleUrls: ['header.component.scss']\n  })\nexport class HeaderComponent {\n    user: User | null;\n\n    loading = false;\n\n    userFromApi: User | undefined;\n\n\n    constructor(\n      private authenticationService: AuthenticationService,\n      private userService: UserService,\n    ) {\n        this.authenticationService.user.subscribe((x) => { this.user = x; });\n        this.user = this.authenticationService.userValue;\n    }\n\n    logout() {\n      this.authenticationService.logout();\n    }\n}\n","export * from './user-list/user-list.component';\nexport * from './user-page/user-page.component';","import { Category } from 'src/app/models';\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, FormArray,FormControl, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\n\nimport { ProductsService } from 'src/app/services/products.service';\nimport { first } from \"rxjs/operators\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DialogComponent } from '../../dialog/dialog.component'\nimport { CategoriesService } from 'src/app/services';\n\n@Component({\n    selector: 'app-product-create',\n    templateUrl: 'product-create.component.html',\n    styleUrls: ['product-create.component.scss']\n})\nexport class ProductCreateComponent implements OnInit {\n    createForm!: FormGroup;\n\n    loading = false;\n\n    submitted = false;\n\n    error = '';\n\n    categories: Category[] = [];\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private productsService: ProductsService,\n        private categoriesService: CategoriesService,\n        private _location: Location,\n        public dialog: MatDialog,\n    ) { }\n\n    ngOnInit() {\n        this.createForm = this.formBuilder.group({\n            name: ['', [Validators.required]],\n            price: ['', Validators.required],\n            sale: [],\n            category: new FormControl({\n                id: [],\n                name: [],\n                picture: [],\n            })\n        });\n        this.categoriesService.getAll().pipe().subscribe((categories) => {\n            this.categories = categories;\n        });\n      }\n\n    get getControls() { return this.createForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n        if (this.createForm.invalid) {\n          return;\n        }\n        this.loading = true;\n        this.productsService.create(this.createForm).pipe(first()).subscribe(() => { \n            this.createForm.controls.name.setValue(null);\n            this.createForm.controls.price.setValue(null);\n            this.createForm.controls.sale.setValue(null);\n\n            this.dialog.open(DialogComponent, {\n                width: '250px',\n                data: {message: 'Product added' }\n            });\n            this.loading = false;\n        },\n            (error) => {\n                this.error = error;\n                this.loading = false;\n            },);\n    }\n\n    backClicked() {\n        this._location.back();\n    }\n}\n","<button mat-raised-button color=\"primary\" (click)=\"backClicked()\" class=\"width\">\n  к предидущей странице\n</button>\n<div class=\"parent\">\n    <mat-card class=\"my-card block\" style=\"text-align: center;\">\n        <mat-card-content >\n           <form id=\"create\" class=\"my-form\" [formGroup]=\"createForm\" (ngSubmit)=\"onSubmit()\">  \n                \n                <mat-form-field class=\"full-width\">\n                    <mat-label>Имя</mat-label>\n                    <input type=\"text\" matInput  placeholder=\"Name\" formControlName=\"name\" [ngClass]=\"{ 'is-invalid': submitted && getControls.name.errors }\">\n                    <mat-error *ngIf=\"getControls.name.errors?.required\">имя не заполнено</mat-error>\n                </mat-form-field>\n                <br>\n\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Цена</mat-label>\n                    <input type=\"number\" matInput  placeholder=\"Price\" formControlName=\"price\" [ngClass]=\"{ 'is-invalid': submitted && getControls.price.errors }\">\n                    <mat-error *ngIf=\"getControls.price.errors?.required\">цена не заполнена</mat-error>\n                </mat-form-field>\n                <br>\n\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Скидка</mat-label>\n                    <input type=\"number\" matInput  placeholder=\"Sale\" formControlName=\"sale\">\n                </mat-form-field>\n                <br>\n\n                    <mat-form-field appearance=\"fill\">\n                      <mat-label>Категория</mat-label>\n                      <mat-select formControlName=\"category\">\n                        <mat-option *ngFor=\"let category of categories\" [value]=\"category\">\n                          {{category.name}}\n                        </mat-option>\n                      </mat-select>\n                    </mat-form-field>\n\n           </form>\n        </mat-card-content>\n        <mat-card-actions>\n           <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"loading\" form=\"create\">\n               <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n               Создать</button>\n           <div class=\"error-backend\">{{error}}</div>            \n        </mat-card-actions>\n     </mat-card>\n</div>\n","export * from './category-list/category-list.component';\nexport * from './category-create/category-create.component';\nexport * from './category-page/category-page.component';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n    selector: 'app-dialog',\n    templateUrl: 'dialog.component.html',\n  })\n  export class DialogComponent {\n    public dialogRef!: MatDialogRef<DialogComponent>\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  }\n","<h1 mat-dialog-title style=\"text-align: center;\">Диалоговое окно</h1>\n<div mat-dialog-content style=\"text-align: center;\">{{data.message}}</div>\n<div mat-dialog-actions style=\"justify-content: center;\">\n  <button mat-button mat-dialog-close>Закрыть</button>\n</div>","import {\n    Component, ViewChild, OnInit\n   } from \"@angular/core\";\n   import { MatPaginator } from '@angular/material/paginator';\n   import { MatTableDataSource } from '@angular/material/table';\n   import { MatSort } from '@angular/material/sort';\n   import { SelectionModel } from '@angular/cdk/collections';\n\n   import { User } from \"src/app/models\";\n   import { UserService } from \"src/app/services\";\n   import { Router } from \"@angular/router\";\n\n@Component({\n    selector: 'app-list-users',\n    templateUrl: 'user-list.component.html',\n    styleUrls: ['user-list.component.scss']\n})\nexport class UsersListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n    @ViewChild(MatSort) sort!: MatSort;\n\n    displayedColumns: string[] = ['id', 'username', 'email', 'role', 'first_name','last_name','patronymic','phone','active','select'];\n\n    users: User[] = [];\n\n    dataSource!: MatTableDataSource<User>;\n\n    selection = new SelectionModel<User>(true, []);\n\n    constructor(private categoriesService: UserService, private router: Router) { }\n\n    ngOnInit() {\n        this.categoriesService.getAll().pipe().subscribe((users) => {\n            this.users = users;\n            this.dataSource = new MatTableDataSource<User>(this.users);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n        });\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n          this.dataSource.paginator.firstPage();\n        }\n    }\n\n    removeSelectedRows() {\n        this.selection.selected.forEach((item) => {\n        const index: number = this.users.findIndex((d) => d === item);\n        this.users.splice(index,1);\n        this.categoriesService.delete(item.id);\n\n        this.dataSource = new MatTableDataSource<User>(this.users);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    });\n    this.selection = new SelectionModel<User>(true, []);\n    }\n\n    isAllSelected() {\n        const numSelected = this.selection.selected.length;\n        const numRows = this.dataSource.data.length;\n        return numSelected === numRows;\n    }\n\n    masterToggle() {\n        if(this.isAllSelected()) {\n            this.selection.clear()\n        }else {\n            this.dataSource.data.forEach((row) => this.selection.select(row));\n        }\n    }\n\n    navigateUserPage(id: number) {\n        this.router.navigate([`/users/${id}`]);\n    }\n}\n","<mat-form-field>\n    <mat-label>Фильтр</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n  </mat-form-field>\n  \n  <div class=\"mat-elevation-z8\">\n  \n    <button mat-raised-button color=\"primary\" (click)=\"removeSelectedRows()\" class=\"width\">\n      Удалить выбранные строки\n    </button>\n\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n  \n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Id. </th>\n         \n        <td mat-cell *matCellDef=\"let element\" (click)=\"navigateUserPage(element.id)\"  class=\"padding\" >\n          <button mat-button [disabled]=\"element.id === 1\"><span class=\"material-icons\">edit</span> {{element.id}}</button> \n        </td>\n      </ng-container>\n  \n      <ng-container matColumnDef=\"username\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Никнейм </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"td-pad\"> {{element.username}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"td-pad\"> {{element.email}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"role\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Роль </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"td-pad\"> {{element.roles[0]}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"first_name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Имя </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"td-pad\"> {{element.first_name}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"last_name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Фамилия </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"td-pad\"> {{element.last_name}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"patronymic\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Отчество </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"td-pad\"> {{element.patronymic}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"phone\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Телефон </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"td-pad\"> {{element.phone}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"active\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Активный </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"td-pad\"> {{element.active}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef class=\"align\" class=\"padding-right\">\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell  *matCellDef=\"let row\" class=\"align\" class=\"padding-right\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  \n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">Нет данных, соответствующих фильтру \"{{input.value}}\"</td>\n      </tr>\n    </table>\n  \n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n  \n    <!-- <button mat-raised-button color=\"primary\" routerLink=\"create\" class=\"width\">\n      Create user\n    </button> -->\n  </div>","import { Injectable } from '@angular/core';\nimport {\n  Router,\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { AuthenticationService } from '../services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService,\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const user = this.authenticationService.userValue;\n    if (user && (user.roles != null)) {\n      if (route.data.roles && route.data.roles.indexOf(user.roles[0]) === -1) {\n        this.router.navigate(['/']);\n        return false;\n      }\n      return true;\n    }\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Location } from '@angular/common';\n\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { first } from \"rxjs/operators\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DialogComponent } from './../../dialog/dialog.component';\nimport { Category } from 'src/app/models';\n\n@Component({\n    selector: 'category-create',\n    templateUrl: 'category-create.component.html',\n    styleUrls: ['category-create.component.scss']\n})\nexport class CategoryCreateComponent implements OnInit {\n    createForm!: FormGroup;\n\n    loading = false;\n\n    submitted = false;\n\n    error = '';\n\n    fileName = '';\n\n    category!: Category;\n\n    file!:File;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private categoriesService: CategoriesService,\n        private _location: Location,\n        public dialog: MatDialog,\n    ) { }\n\n    ngOnInit() {\n        this.createForm = this.formBuilder.group({\n            name: ['', [Validators.required]],\n        });\n      }\n\n    get getControls() { return this.createForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        if (this.createForm.invalid) return;\n\n        this.loading = true;\n        \n        this.categoriesService.create(this.createForm).pipe(first()).subscribe((category) => {\n            this.category = category;\n            this.dialog.open(DialogComponent, {\n                width: '250px',\n                data: {message: 'Category added' }\n            });\n            if (this.file && this.category.id) {\n\n                const data = new FormData();\n    \n                data.append(\"file\", this.file);\n    \n                this.categoriesService.updatePic(data, this.category.id)\n                .pipe(first()).subscribe((category: any) => { \n                        this.dialog.open(DialogComponent, {\n                            width: '250px',\n                            data: {message: 'Picture added' }\n                        });\n                    },\n                    (error) => {   this.error = error; },\n                );\n    \n                    \n            }\n        },\n            (error) => { this.error = error;},\n        );\n        this.loading = false;\n    }\n\n    backClicked() {\n        this._location.back();\n    }\n\n    onFileSelected(event: any) {\n        this.file = event.target.files[0];\n        \n        this.fileName = this.file.name;\n    }\n}","<button mat-raised-button color=\"primary\" (click)=\"backClicked()\" class=\"width\">\n    Назад к категориям\n  </button>\n<div class=\"parent\">\n    <mat-card class=\"my-card block\" style=\"text-align: center;\">\n        <mat-card-content >\n           <form id=\"create\" class=\"my-form\" [formGroup]=\"createForm\" (ngSubmit)=\"onSubmit()\">  \n                \n                <mat-form-field class=\"full-width\">\n                    <mat-label>Имя</mat-label>\n                    <input type=\"text\" matInput  placeholder=\"Name\" formControlName=\"name\" [ngClass]=\"{ 'is-invalid': submitted && getControls.name.errors }\">\n                    <mat-error *ngIf=\"getControls.name.errors?.required\">имя не заполнено</mat-error>\n                </mat-form-field>\n                <br>\n        \n           </form>\n\n           <div class=\"align\">\n                <input \n                type=\"file\"\n                class=\"file-input\"\n                accept=\"image/x-png,image/gif,image/jpeg\"\n                (change)=\"onFileSelected($event)\"\n                #fileUpload>\n        \n                <div class=\"file-upload\">\n                    <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\n                    (click)=\"fileUpload.click()\">\n                        <mat-icon>attach_file</mat-icon>\n                    </button>\n                    <span>\n                        {{fileName || \"файл еще не загружен\"}}\n                    </span>\n                </div>\n            </div>\n\n        </mat-card-content>\n\n        <mat-card-actions>\n           <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"loading\" form=\"create\">\n               <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n               Создать</button>\n           <div class=\"error-backend\">{{error}}</div>            \n        </mat-card-actions>\n\n     </mat-card>\n</div>\n","export * from './role';\n","// export const PATH_BACKEND_API = 'http://localhost:8080';\nexport const PATH_BACKEND_API = 'https://green-house--backend.herokuapp.com';\n\nexport const PATH_S3_API = 'https://diploma-bucket.s3.eu-central-1.amazonaws.com/';","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\n\nimport { Param } from '../models';\nimport { PATH_BACKEND_API } from '../constants';\n\n@Injectable({ providedIn: 'root' })\nexport class ParamsService {\n  constructor(private http: HttpClient) { }\n\n  getById(id: number) {\n    return this.http.get<Param[]>(`${PATH_BACKEND_API}/product-params/${id}`);\n  }\n\n  update(formGroup: FormGroup, id: number) {\n    const body = {\n        text: formGroup.controls.text.value,\n        percent: formGroup.controls.percent.value,\n    }\n    return this.http.put<Param>(`${PATH_BACKEND_API}/product-params/${id}`, body);\n  }\n}\n","export * from './login.component';\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { FormGroup } from '@angular/forms';\nimport { Order } from '../models';\nimport { PATH_BACKEND_API } from '../constants';\n\n@Injectable({ providedIn: 'root' })\nexport class OrdersService {\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get<Order[]>(`${PATH_BACKEND_API}/orders`);\n  }\n\n  getById(id: number) {\n    return this.http.get<Order>(`${PATH_BACKEND_API}/orders/${id}`);\n  }\n\n  delete(id: number) {\n     this.http.delete(`${PATH_BACKEND_API}/orders/${id}`).subscribe(() => {});\n  }\n\n  update(formGroup: FormGroup, idOrder: number) {\n    const body = {\n    //   name: formGroup.controls.name.value,\n    }\n    return this.http.put<Order>(`${PATH_BACKEND_API}/orders/${idOrder}`, body);\n  }\n\n  updateStatus(status: string, idOrder: number) {\n    return this.http.put<Order>(`${PATH_BACKEND_API}/orders/${idOrder}/status`, status);\n  }\n}\n","export * from './error.interceptor';\nexport * from './jwt.interceptor';\n","export enum Role {\n    user = 'ROLE_USER',\n    admin = 'ROLE_ADMIN',\n    super_admin = 'ROLE_SUPER_ADMIN'\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Location } from '@angular/common';\n\nimport { UserService } from 'src/app/services';\nimport { User } from 'src/app/models';\n@Component({\n    selector: 'app-page-user',\n    templateUrl: 'user-page.component.html',\n    styleUrls: ['user-page.component.scss']\n})\nexport class UserPageComponent implements OnInit {\n\n    returnUrl!: string;\n\n    user!: User | undefined;\n\n    role!: string;\n\n    constructor(\n        private _location: Location,\n        private route: ActivatedRoute,\n        private userService: UserService,\n    ) {\n        \n    }\n\n    ngOnInit() {\n        const idUser = this.route.snapshot.params.id;\n        this.userService.getById(idUser).pipe().subscribe((user) => {\n            this.user = user;\n            this.role = user.roles[0];\n        });\n        this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n      }\n\n      backClicked() {\n        this._location.back();\n    }\n }\n","<button mat-raised-button color=\"primary\" (click)=\"backClicked()\" class=\"width\">\n  Назад к категориям\n</button>\n<mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>{{user?.id}}</mat-card-title>\n      <mat-card-subtitle>Id</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-header>\n        <mat-card-title>{{user?.username}}</mat-card-title>\n        <mat-card-subtitle>Никнейм</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-header>\n        <mat-card-title>{{user?.email}}</mat-card-title>\n        <mat-card-subtitle>Email</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-header>\n        <mat-card-title>{{role}}</mat-card-title>\n        <mat-card-subtitle>Роль</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-header>\n        <mat-card-title>{{user?.first_name}}</mat-card-title>\n        <mat-card-subtitle>Имя</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-header>\n        <mat-card-title>{{user?.last_name}}</mat-card-title>\n        <mat-card-subtitle>Фамилия</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-header>\n        <mat-card-title>{{user?.patronymic}}</mat-card-title>\n        <mat-card-subtitle>Отчество</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-header>\n        <mat-card-title>{{user?.phone}}</mat-card-title>\n        <mat-card-subtitle>Телефон</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-header>\n        <mat-card-title>{{user?.active}}</mat-card-title>\n        <mat-card-subtitle>Активный</mat-card-subtitle>\n      </mat-card-header>\n  </mat-card>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\n\nimport { Product } from '../models';\nimport { PATH_BACKEND_API } from '../constants';\n\n@Injectable({ providedIn: 'root' })\nexport class ProductsService {\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get<Product[]>(`${PATH_BACKEND_API}/products`);\n  }\n\n  getById(id: number) {\n    return this.http.get<Product>(`${PATH_BACKEND_API}/products/${id}`);\n  }\n\n  delete(id: number) {\n    this.http.delete(`${PATH_BACKEND_API}/products/${id}`).subscribe(() => { });\n  }\n\n create(formGroup: FormGroup) {\n    const body = {\n      name: formGroup.controls.name.value,\n      price: formGroup.controls.price.value,\n      sale: formGroup.controls.sale.value,\n      category: formGroup.controls.category.value,\n    }\n    return this.http.post<Product>(`${PATH_BACKEND_API}/products`, body);\n  }\n\n  update(formGroup: FormGroup) {\n    const body = {\n        email: formGroup.controls.email.value,\n        phone: formGroup.controls.phone.value,\n        role: formGroup.controls.role.value\n    }\n    return this.http.put<Product>(`${PATH_BACKEND_API}/products/${formGroup.controls.id.value}`, body);\n  }\n\n  updatePic(data: FormData, id: number){\n    return this.http.put(`${PATH_BACKEND_API}/products/${id}/pic`, data);\n}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'admin';\n}\n","<app-header></app-header>","export * from './guard.constants';\n","export * from './main-page.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../../services';\n\n@Component({\n   templateUrl: 'login.component.html',\n   styleUrls: ['login.component.scss']\n  })\nexport class LoginComponent implements OnInit {\n    loginForm!: FormGroup;\n\n    loading = false;\n\n    submitted = false;\n\n    returnUrl!: string;\n\n    error = '';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n    ) {\n      if (this.authenticationService.userValue) {\n        this.router.navigate(['/']);\n      }\n    }\n\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        email: ['', Validators.required],\n        password: ['', Validators.required],\n      });\n\n      this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n    }\n\n    get getControls() { return this.loginForm.controls; }\n\n    onSubmit() {\n      this.submitted = true;\n\n      if (this.loginForm.invalid) {\n        return;\n      }\n\n      this.loading = true;\n      this.authenticationService.login(\n        this.getControls.email.value,\n        this.getControls.password.value\n        ).pipe(first()).subscribe(\n          () => {\n            this.router.navigate([this.returnUrl]);\n          },\n          (error) => {\n            this.error = error;\n            this.loading = false;\n          },\n        );\n    }\n}\n","<div class=\"parent\">\n    <mat-card class=\"my-card block\" style=\"text-align: center;\">\n        <mat-card-content >\n           <form id=\"loga\" class=\"my-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">  \n\n              <mat-form-field class=\"full-width\">\n                 <mat-label>Email</mat-label>\n                 <input type=\"email\" matInput  placeholder=\"pat@example.com\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': submitted && getControls.email.errors }\">\n                 <!-- <mat-error *ngIf=\"getControls.email.errors?.email\">incorrect email</mat-error> -->\n                 <mat-error *ngIf=\"getControls.email.errors?.required\">email не заполнен</mat-error>\n              </mat-form-field>\n\n              <mat-form-field class=\"full-width\">\n                 <mat-label>Пароль</mat-label>\n                 <input type=\"password\" matInput  placeholder=\"Password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': submitted && getControls.password.errors }\">\n                 <mat-error *ngIf=\"getControls.password.errors?.required\">пароль не заполнен</mat-error>\n              </mat-form-field>\n               \n           </form>\n        </mat-card-content>\n        <mat-card-actions>\n           <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"loading\" form=\"loga\">\n               <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n               Вход</button>\n           <div class=\"error-backend\">{{error}}</div>\n        </mat-card-actions>\n     </mat-card>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatStepperModule } from '@angular/material/stepper';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginComponent } from './components/login';\nimport { HeaderComponent } from './components/header';\nimport { MainPageComponent } from './components/main-page';\nimport { AppComponent } from './app.component';\n\nimport { DialogComponent } from './components/dialog/dialog.component';\nimport { ErrorInterceptor, JwtInterceptor } from './interceptors';\nimport {\n  ProductPageComponent,\n  ProductListComponent,\n  ProductCreateComponent,\n  ProductImageComponent,\n  ProductInfoComponent,\n  ProductDescriptonComponent,\n  ProductParamComponent\n} from './components/products'\nimport {\n  UsersListComponent,\n  UserPageComponent\n  } from './components/users'\nimport {\n   CategoryPageComponent,\n   CategoryListComponent,\n   CategoryCreateComponent\n  } from './components/categories'\n  import {\n    OrderListComponent,\n    OrderPageComponent\n  } from './components/orders'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MainPageComponent,\n    HeaderComponent,\n    CategoryPageComponent,\n    CategoryListComponent,\n    CategoryCreateComponent,\n    DialogComponent,\n    UsersListComponent,\n    UserPageComponent,\n    ProductPageComponent,\n    ProductListComponent,\n    ProductCreateComponent,\n    ProductImageComponent,\n    ProductDescriptonComponent,\n    ProductInfoComponent,\n    ProductParamComponent,\n    OrderListComponent,\n    OrderPageComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatSelectModule,\n    MatListModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatStepperModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: JwtInterceptor,\n    multi: true,\n  },{\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true,\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Location } from '@angular/common';\n\nimport { CategoriesService } from 'src/app/services/categories.service';\nimport { Category } from 'src/app/models';\nimport { first } from \"rxjs/operators\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { PATH_S3_API } from '../../../constants'\nimport { DialogComponent } from './../../dialog/dialog.component';\n\n@Component({\n    selector: 'category-page',\n    templateUrl: 'category-page.component.html',\n    styleUrls: ['category-page.component.scss']\n})\nexport class CategoryPageComponent implements OnInit {\n    updateForm!: FormGroup;\n\n    loading = false;\n\n    submitted = false;\n\n    returnUrl!: string;\n\n    error = '';\n\n    fileName = '';\n\n    idCategory: number;\n\n    category: Category | undefined;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private categoriesService: CategoriesService,\n        private _location: Location,\n        public dialog: MatDialog,\n    ) {\n        \n        this.idCategory = this.route.snapshot.params.id;\n        categoriesService.getById(this.idCategory).pipe().subscribe((category) => {\n            if(category.picture){\n                this.fileName = 'picture exists'\n                category.picture = PATH_S3_API + category.picture;\n            }\n            \n            this.category = category;\n\n            this.updateForm.controls.name.setValue(this.category.name)\n            this.updateForm.controls.id.setValue(this.category.id)\n        });\n    }\n\n    ngOnInit() {\n        this.updateForm = this.formBuilder.group({\n            name: ['', [Validators.required]],\n            id: [{ value: this.idCategory, disabled: true }]\n        });\n        this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n      }\n\n    get getControls() { return this.updateForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        if (this.updateForm.invalid) {\n          return;\n        }\n        if(this.category) {\n            this.loading = true;\n            this.categoriesService.update(this.updateForm, this.idCategory ).pipe(first()).subscribe(() => { \n                this.dialog.open(DialogComponent, {\n                    width: '250px',\n                    data: {message: 'category updated' }\n                  });\n            },\n                (error) => {\n                  this.error = error;\n                },);\n\n            this.loading = false;\n        }\n    }\n\n    onFileSelected(event: any) {\n\n        const file:File = event.target.files[0];\n\n        if (file) {\n\n            this.fileName = file.name;\n\n            const data = new FormData();\n\n            data.append(\"file\", file);\n\n            this.categoriesService.updatePic(data, this.idCategory)\n            .pipe(first()).subscribe((category: any) => { \n                category.picture = PATH_S3_API + category.picture;\n                this.category = category;\n                this.updateForm.controls.picture.setValue(this.category?.picture)\n            },\n\n                (error) => {\n                    this.error = error;\n\n                },);\n\n                this.dialog.open(DialogComponent, {\n                    width: '250px',\n                    data: {message: 'Picture updated' }\n                });\n        }\n    }\n\n    backClicked() {\n        this._location.back();\n    }\n\n}","<button mat-raised-button color=\"primary\" (click)=\"backClicked()\" class=\"width\">\n    back to categories\n  </button>\n<mat-card class=\"example-card\">\n\n    <mat-card-header class=\"align\">\n        <form id=\"update\" class=\"my-form\" [formGroup]=\"updateForm\" (ngSubmit)=\"onSubmit()\">\n\n            <mat-form-field class=\"full-width\">\n                <mat-label>Id</mat-label>\n                <input matInput formControlName=\"id\" formControlName=\"id\" >\n            </mat-form-field>\n            \n            <mat-form-field class=\"full-width\">\n                <mat-label>Имя</mat-label>\n                <input type=\"text\" matInput  placeholder=\"Name\" formControlName=\"name\" [ngClass]=\"{ 'is-invalid': submitted && getControls.name.errors }\">\n                <mat-error *ngIf=\"getControls.name.errors?.required\">имя не заполнено</mat-error>\n            </mat-form-field>\n\n            <mat-card-actions сlass=\"full-width\">\n                <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"loading\" form=\"update\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Обновить\n                </button>\n                <div class=\"error-backend\">{{error}}</div>    \n            </mat-card-actions>\n        </form>\n\n    </mat-card-header>\n\n    <img *ngIf=\"category?.picture\" mat-card-image [src]=\"category?.picture\" alt=\"Photo of a category\">\n\n    <mat-card-actions class=\"align\">\n        <input \n        type=\"file\"\n        class=\"file-input\"\n        accept=\"image/x-png,image/gif,image/jpeg\"\n        (change)=\"onFileSelected($event)\"\n        #fileUpload>\n\n        <div class=\"file-upload\">\n            <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\n            (click)=\"fileUpload.click()\">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n            <span>\n                {{fileName || \"Файл еще не загружен.\"}}\n            </span>\n        </div>\n\n    </mat-card-actions>\n  </mat-card>","import { Component, OnInit, Input} from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ProductsService } from 'src/app/services';\nimport { Product } from 'src/app/models';\nimport { PATH_S3_API } from '../../../../constants'\nimport { first } from \"rxjs/operators\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DialogComponent } from './../../../dialog/dialog.component';\n\n@Component({\n    selector: 'app-product-image',\n    templateUrl: 'product-image.component.html',\n    styleUrls: ['product-image.component.scss']\n})\nexport class ProductImageComponent implements OnInit { \n\n    @Input() product!: Product;\n\n    fileName = '';\n\n    error = '';\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private productsService: ProductsService,\n        public dialog: MatDialog,\n\n    ) {\n        \n    }\n\n    ngOnInit() {\n\n    }\n\n    onFileSelected(event: any) {\n\n        const file:File = event.target.files[0];\n\n        if (file) {\n\n            this.fileName = file.name;\n\n            const data = new FormData();\n\n            data.append(\"file\", file);\n\n            this.productsService.updatePic(data, this.product.id)\n            .pipe(first()).subscribe((product: any) => { \n                product.picture = PATH_S3_API + product.picture;\n                this.product = product;\n            },\n                (error) => {\n                    this.error = error;\n\n                },);\n\n                this.dialog.open(DialogComponent, {\n                    width: '250px',\n                    data: {message: 'Picture updated' }\n                });\n        }\n    }\n}","<mat-card class=\"example-card\" class=\"prod-app-card\">\n    <mat-card-header>\n      <mat-card-title >Картинка</mat-card-title>\n    </mat-card-header>\n\n    <div *ngIf=\"product?.picture\">\n      <br>\n      <img mat-card-image [src]=\"product?.picture\" alt=\"Photo of a Shiba Inu\">\n\n      <mat-card-content>\n        Url: <br>\n        <p>{{product?.picture}}</p>\n      </mat-card-content>\n          \n      <mat-card-actions>\n        <input \n        type=\"file\"\n        class=\"file-input\"\n        accept=\"image/x-png,image/gif,image/jpeg\"\n        (change)=\"onFileSelected($event)\"\n        #fileUpload>\n\n        <div class=\"file-upload\">\n            <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\n            (click)=\"fileUpload.click()\">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n            <span>\n                {{fileName || \"Обновить картинку.\"}}\n            </span>\n        </div>\n      </mat-card-actions>\n    </div>\n\n    <div *ngIf=\"!product?.picture\">\n      <mat-card-actions>\n        <input \n        type=\"file\"\n        class=\"file-input\"\n        accept=\"image/x-png,image/gif,image/jpeg\"\n        (change)=\"onFileSelected($event)\"\n        #fileUpload>\n\n        <div class=\"file-upload\">\n            <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\n            (click)=\"fileUpload.click()\">\n                <mat-icon>attach_file</mat-icon>\n            </button>\n            <span>\n                {{fileName || \"Добавить картинку.\"}}\n            </span>\n        </div>\n      </mat-card-actions>\n    </div>\n    \n  </mat-card>","export * from './product-list/product-list.component';\nexport * from './product-page/product-page.component';\nexport * from './product-create/product-create.component';\nexport * from './product-page/product-image/product-image.component';\nexport * from './product-page/product-description/product-description.component';\nexport * from './product-page/product-info/product-info.component';\nexport * from './product-page/product-param/product-param.component';","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models';\nimport { PATH_BACKEND_API } from '../constants';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    public user: Observable<User | null>;\n\n    private userSubject: BehaviorSubject<User | null>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n    ) {\n      const userJson = localStorage.getItem('user');\n\n      if(userJson != null) {\n\n        this.userSubject = new BehaviorSubject<User | null>(JSON.parse(userJson));\n      }else {\n        this.userSubject = new BehaviorSubject<User | null>(null);\n      }\n      this.user = this.userSubject.asObservable();\n    }\n\n    public get userValue(): User | null {\n      return this.userSubject.value;\n    }\n\n    login(email: string, password: string) {\n      return this.http.post<any>(`${PATH_BACKEND_API}/authenticate`, { email, password })\n      .pipe(map((user) => {\n        localStorage.setItem('user', JSON.stringify(user));\n        this.userSubject.next(user);\n        return user;\n      }));\n    }\n\n    logout() {\n      localStorage.removeItem('user');\n      this.userSubject.next(null as any);\n      this.router.navigate(['/login']);\n    }\n}\n","import { Component, OnInit, Input} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ParamsService } from 'src/app/services';\nimport { Param, Product } from 'src/app/models';\nimport { DialogComponent } from './../../../dialog/dialog.component';\n\n@Component({\n    selector: 'app-product-param',\n    templateUrl: 'product-param.component.html',\n    styleUrls: ['product-param.component.scss']\n})\nexport class ProductParamComponent implements OnInit  { \n\n    @Input() product!: Product;\n\n    params!: Param[];\n\n    updateForm!: FormGroup;\n\n    loading = false;\n\n    submitted = false;\n\n    error = '';\n\n    idProduct!: number;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private paramsService: ParamsService,\n        private route: ActivatedRoute,\n        public dialog: MatDialog,\n    ) { \n        this.updateForm = this.formBuilder.group({\n            text: ['', [Validators.required]],\n            percent: ['', [\n                Validators.required,\n                Validators.pattern(\"^[1-9][0-9]?$|^100$\"),\n                Validators.maxLength(3),]\n            ]\n        });\n    }\n\n    ngOnInit() {\n        this.idProduct= this.route.snapshot.params.id;\n        this.paramsService.getById(this.idProduct).pipe().subscribe((params) => {\n            this.params = params;\n        });\n    }\n\n    get getControls() { return this.updateForm.controls; }\n\n    updateParam(paramUpdate: Param){\n        this.submitted = true;\n\n        if (this.updateForm.invalid) return;\n\n        this.loading = true;\n        \n        this.paramsService.update(this.updateForm, paramUpdate.id).pipe(first()).subscribe((param) => {\n\n            const index: number = this.params.findIndex((x) => x === paramUpdate);\n\n            this.params[index] = param;\n\n            this.dialog.open(DialogComponent, {\n                width: '250px',\n                data: {message: 'Param Updated' }\n            });\n\n        },\n            (error) => { this.error = error;},\n        );\n        this.loading = false;\n    }\n}","<mat-card class=\"example-card\" class=\"prod-app-card\">\n    <mat-card-header>\n      <mat-card-title >Params</mat-card-title>\n    </mat-card-header>\n  \n    <div  *ngFor=\"let param of params\" class=\"desc-ell\">\n      <mat-card-header>\n        <div mat-card-avatar class=\"example-header-image\"></div>\n        <mat-card-title>id: {{param?.id}}</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n\n\n        <div></div>\n        <p> текст: {{param?.text}} <br>\n          проценты:{{param?.percent}}\n        </p>      \n      </mat-card-content>\n    <mat-card-actions>\n  \n        <form [attr.id]=\"param.id\" class=\"my-form\" [formGroup]=\"updateForm\" (ngSubmit)=\"updateParam(param)\">  \n  \n            <mat-expansion-panel style=\"text-align: center;\">\n              <mat-expansion-panel-header >\n                <mat-panel-title>\n                  Обновить\n                </mat-panel-title>\n              </mat-expansion-panel-header>\n        \n              <mat-form-field>\n                <mat-label>Текст</mat-label>\n                <input matInput type=\"text\" formControlName=\"text\" [ngClass]=\"{ 'is-invalid': submitted && getControls.text.errors }\">\n                <mat-error *ngIf=\"getControls.text.errors?.required\">текст не заполнен</mat-error>\n              </mat-form-field>\n        \n              <mat-form-field>\n                <mat-label>Проценты</mat-label>\n                <input matInput type=\"text\" formControlName=\"percent\" [ngClass]=\"{ 'is-invalid': submitted && getControls.percent?.errors }\">\n                <mat-error *ngIf=\"getControls.percent?.errors?.required\">проценты не заполнены</mat-error>\n              </mat-form-field>\n        \n              <br>\n              <button mat-button>Обновить</button>\n            </mat-expansion-panel>\n        \n        </form>\n\n      </mat-card-actions>\n  \n    </div>\n  </mat-card>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\n\nimport { Description } from '../models';\nimport { PATH_BACKEND_API } from '../constants';\n\n@Injectable({ providedIn: 'root' })\nexport class DescriptionsService {\n  constructor(private http: HttpClient) { }\n\n  getByProductId(id: number) {\n    return this.http.get<Description[]>(`${PATH_BACKEND_API}/product-descriptions/${id}`);\n  }\n\n  delete(id: number) {\n    this.http.delete(`${PATH_BACKEND_API}/product-descriptions/${id}`).subscribe(() => { });\n  }\n\n create(formGroup: FormGroup, id: number) {\n    const body = {\n      heading: formGroup.controls.heading.value,\n      text: formGroup.controls.text.value,\n    }\n    return this.http.post<Description>(`${PATH_BACKEND_API}/product-descriptions/${id}`, body);\n  }\n\n  update(formGroup: FormGroup, id: number) {\n    const body = {\n        heading: formGroup.controls.heading.value,\n        text: formGroup.controls.text.value,\n    }\n    return this.http.put<Description>(`${PATH_BACKEND_API}/product-descriptions/${id}`, body);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { User } from '../models';\nimport { AuthenticationService } from '../services';\nimport { PATH_BACKEND_API } from '../constants';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  user!: User ;\n\n  constructor(private authenticationService: AuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const user = this.authenticationService.userValue;\n    const isLoggedIn = user && user.token;\n    const isApiUrl = request.url.startsWith(PATH_BACKEND_API);\n\n    let returnedRequest: HttpRequest<any> = request;\n\n    if (isLoggedIn && isApiUrl) {\n      returnedRequest = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${user?.token}`,\n        },\n      });\n    }\n\n    return next.handle(returnedRequest);\n  }\n}","<button mat-raised-button color=\"primary\" (click)=\"backClicked()\" class=\"width\">\n    на предидущую страницу\n  </button>\n<div>\n<mat-card class=\"example-card\">\n    <mat-card-header>\n      <mat-card-title>{{order?.id}}</mat-card-title>\n      <mat-card-subtitle>Id</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-header>\n        <mat-card-title>{{order?.placedAt}}</mat-card-title>\n        <mat-card-subtitle>Размещен</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-header>\n        <mat-card-title>{{order?.status}}</mat-card-title>\n        <mat-card-subtitle>Статус</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-header>\n        <mat-card-title >\n            г. {{order?.address?.city}}, {{order?.address?.street}} {{order?.address?.build}}, кв. {{order?.address?.flat}}\n        </mat-card-title>\n        <mat-card-subtitle>Адрес </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-header>\n        <mat-card-title>\n            <span *ngFor=\"let product of order?.products\">\n                <span  (click)=\"navigatePageProduct(product.id)\">{{product?.id}}, </span>\n              </span>\n        </mat-card-title>\n        <mat-card-subtitle>Товары</mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-header (click)=\"navigatePageUser(order.user.id)\">\n        <mat-card-title>{{order?.user?.id}}</mat-card-title>\n        <mat-card-subtitle>Id пользователя</mat-card-subtitle>\n      </mat-card-header>\n  </mat-card>\n\n    <mat-horizontal-stepper>\n        <mat-step label=\"В обработке\" state=\"phone\">\n          <div>\n            <button mat-button matStepperNext (click)=\"updateStatus('В обработке')\">Обновить</button>\n          </div>\n        </mat-step>\n\n        <mat-step label=\"Передан курьеру\" state=\"chat\" *ngIf=\"order?.status == 'Передан курьеру'\" completed=true>\n          <div>\n            <button mat-button matStepperNext (click)=\"updateStatus('Передан курьеру')\">Обновить</button>\n          </div>\n        </mat-step>\n        <mat-step label=\"Передан курьеру\" state=\"chat\" *ngIf=\"order?.status !== 'Передан курьеру'\" >\n            <div>\n              <button mat-button matStepperNext (click)=\"updateStatus('Передан курьеру')\">Обновить</button>\n            </div>\n          </mat-step>\n\n        <mat-step label=\"Доставлено\" *ngIf=\"order?.status == 'Доставлено'\" completed=true>\n          <button mat-button matStepperNext (click)=\"updateStatus('Доставлено')\">Обновить</button>\n        </mat-step>\n        <mat-step label=\"Доставлено\" *ngIf=\"order?.status !== 'Доставлено'\">\n            <button mat-button matStepperNext (click)=\"updateStatus('Доставлено')\">Обновить</button>\n          </mat-step>\n      \n        <!-- Icon overrides. -->\n        <ng-template matStepperIcon=\"phone\">\n          <mat-icon>call_end</mat-icon>\n        </ng-template>\n        <ng-template matStepperIcon=\"chat\">\n          <mat-icon>forum</mat-icon>\n        </ng-template>\n      </mat-horizontal-stepper>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Location } from '@angular/common';\n\nimport { OrdersService } from '../../../services';\nimport { Order } from '../../../models';\n\n@Component({\n    selector: 'app-order-page',\n    templateUrl: 'order-page.component.html',\n    styleUrls: ['order-page.component.scss']\n})\nexport class OrderPageComponent {\n\n    order!: Order;\n\n    idOrder: number;\n\n    constructor(\n        private ordersService: OrdersService,\n        private route: ActivatedRoute,\n        private _location: Location,\n        private router: Router\n        ) { \n        this.idOrder = this.route.snapshot.params.id;\n        this.ordersService.getById(this.idOrder).pipe().subscribe((order) => {\n          this.order = order;\n        });\n      }\n\n      backClicked() {\n        this._location.back();\n    }\n\n    navigatePageProduct(id: number) {\n        this.router.navigate([`/products/${id}`]);\n    }\n\n    navigatePageUser(id: number) {\n        this.router.navigate([`/users/${id}`]);\n    }\n\n    updateStatus(status: string){\n        this.ordersService.updateStatus(status, this.idOrder).pipe().subscribe((order) => {\n            this.order.status = order.status;\n        })\n    }\n}","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Location } from '@angular/common';\n\nimport { ProductsService } from 'src/app/services';\nimport { Product } from 'src/app/models';\nimport { PATH_S3_API } from '../../../constants'\n\n@Component({\n    selector: 'product-page',\n    templateUrl: 'product-page.component.html',\n    styleUrls: ['product-page.component.scss']\n})\nexport class ProductPageComponent implements OnInit { \n    returnUrl!: string;\n\n    product!: Product;\n\n    constructor(\n        private _location: Location,\n        private route: ActivatedRoute,\n        private productsService: ProductsService,\n    ) {\n        \n    }\n\n    ngOnInit() {\n        const idUser = this.route.snapshot.params.id;\n        this.productsService.getById(idUser).pipe().subscribe((product) => {\n            if(product.picture){\n                product.picture = PATH_S3_API + product.picture;\n            }\n            this.product = product;\n        });\n        this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n      }\n\n      backClicked() {\n        this._location.back();\n    }\n}","<button mat-raised-button color=\"primary\" (click)=\"backClicked()\" class=\"width\">\n  На предидущую страницу\n</button>\n\n<div class=\"content\">\n  <div  fxLayout=\"row\" fxLayoutGap=\"16px\" grid>\n\n    <div fxFlex=\"32%\" fxFlex.md=\"50\">\n      <app-product-info [product]=\"product\"></app-product-info>\n    </div>\n\n    <div fxFlex=\"32%\" >\n      <app-product-image [product]=\"product\"></app-product-image>\n    </div>\n\n    <div fxFlex=\"32%\" >\n      <app-product-description [product]=\"product\"></app-product-description>\n    </div>\n\n    <div fxFlex=\"32%\" >\n      <app-product-param [product]=\"product\"></app-product-param>\n    </div>\n  </div>\n\n</div>\n","import {\n    Component, ViewChild, OnInit\n   } from \"@angular/core\";\n   import { MatPaginator } from '@angular/material/paginator';\n   import { MatTableDataSource } from '@angular/material/table';\n   import { MatSort } from '@angular/material/sort';\n   import { SelectionModel } from '@angular/cdk/collections';\n   \n   import { Category } from \"src/app/models\";\n   import { CategoriesService } from \"src/app/services/categories.service\";\n   import { Router } from \"@angular/router\";\n@Component({\n    selector: 'category-list',\n    templateUrl: 'category-list.component.html',\n    styleUrls: ['category-list.component.scss']\n})\nexport class CategoryListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n    @ViewChild(MatSort) sort!: MatSort;\n\n    displayedColumns: string[] = ['id', 'name', 'picture', 'select'];\n\n    categories: Category[] = [];\n\n    dataSource!: MatTableDataSource<Category>;\n\n    selection = new SelectionModel<Category>(true, []);\n\n    constructor(private categoriesService: CategoriesService, private router: Router) { }\n\n    ngOnInit() {\n        this.categoriesService.getAll().pipe().subscribe((categories) => {\n            this.categories = categories;\n            this.dataSource = new MatTableDataSource<Category>(this.categories);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n        });\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n          this.dataSource.paginator.firstPage();\n        }\n    }\n\n    removeSelectedRows() {\n        this.selection.selected.forEach((item) => {\n        const index: number = this.categories.findIndex((d) => d === item);\n        this.categories.splice(index,1);\n        this.categoriesService.delete(item.id);\n\n        this.dataSource = new MatTableDataSource<Category>(this.categories);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    });\n    this.selection = new SelectionModel<Category>(true, []);\n    }\n\n    isAllSelected() {\n        const numSelected = this.selection.selected.length;\n        const numRows = this.dataSource.data.length;\n        return numSelected === numRows;\n    }\n\n    masterToggle() {\n        if(this.isAllSelected()) {\n            this.selection.clear()\n        }else {\n            this.dataSource.data.forEach((row) => this.selection.select(row));\n        }\n    }\n\n    navigatePageCategory(id: number) {\n        this.router.navigate([`/categories/${id}`]);\n    }\n}","<mat-form-field>\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n  </mat-form-field>\n  \n  <div class=\"mat-elevation-z8\">\n  \n    <button mat-raised-button color=\"primary\" (click)=\"removeSelectedRows()\" class=\"width\">\n      Удалить выделеные строки\n    </button>\n  \n    <table mat-table [dataSource]=\"dataSource\" matSort>\n  \n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Id. </th>\n         \n        <td mat-cell *matCellDef=\"let element\" (click)=\"navigatePageCategory(element.id)\" class=\"padding\" >\n          <button mat-button ><span class=\"material-icons\">edit</span> {{element.id}}</button> \n        </td>\n      </ng-container>\n  \n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Имя </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      </ng-container>\n  \n      <ng-container matColumnDef=\"picture\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Картинка </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.picture}} </td>\n      </ng-container>\n  \n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef class=\"align\">\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell  *matCellDef=\"let row\" class=\"align\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  \n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">Нет данных, соответствующих фильтру \"{{input.value}}\"</td>\n      </tr>\n    </table>\n  \n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n  \n    <button mat-raised-button color=\"primary\" routerLink=\"create\" class=\"width\">\n      Создать категорию \n    </button>\n  </div>","export * from './authentication.service';\nexport * from './user.service';\nexport * from './categories.service';\nexport * from './products.service';\nexport * from './descriptions.service';\nexport * from './params.service';\nexport * from './orders.service'","import { Component } from '@angular/core';\nimport { User } from 'src/app/models';\nimport { UserService } from 'src/app/services';\n\nimport { AuthenticationService } from '../../services'\n\n@Component({ templateUrl: 'main-page.component.html' })\nexport class MainPageComponent {\n\n    user: User | null;\n\n    constructor(\n      private authenticationService: AuthenticationService,\n      private userService: UserService,\n    ) {\n        this.authenticationService.user.subscribe((x) => { this.user = x; });\n        this.user = this.authenticationService.userValue;\n    }\n}\n","<br>\n<mat-card style=\"text-align: center;\">\n    <mat-card-header style=\"display: block;\" >Привет <br> {{user?.email}}</mat-card-header>\n        <p>Эта страница доступна <u>только администраторам</u>.</p>\n</mat-card>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\n\nimport { User } from '../models';\nimport { PATH_BACKEND_API } from '../constants';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get<User[]>(`${PATH_BACKEND_API}/users`);\n  }\n\n  getById(id: number) {\n    return this.http.get<User>(`${PATH_BACKEND_API}/users/${id}`);\n  }\n\n  delete(id: number) {\n    this.http.delete(`${PATH_BACKEND_API}/users/${id}`).subscribe(() => { });\n }\n\n  update(formGroup: FormGroup) {\n    const body = {\n        email: formGroup.controls.email.value,\n        phone: formGroup.controls.phone.value,\n        role: formGroup.controls.role.value\n    }\n    return this.http.put<User>(`${PATH_BACKEND_API}/users/${formGroup.controls.id.value}`, body);\n  }\n}\n","import {\n    Component, ViewChild, OnInit\n   } from \"@angular/core\";\n   import { MatPaginator } from '@angular/material/paginator';\n   import { MatTableDataSource } from '@angular/material/table';\n   import { MatSort } from '@angular/material/sort';\n   import { SelectionModel } from '@angular/cdk/collections';\n   \n   import { Product } from \"src/app/models\";\n   import { ProductsService } from \"src/app/services\";\n   import { Router } from \"@angular/router\";\n@Component({\n    selector: 'product-list',\n    templateUrl: 'product-list.component.html',\n    styleUrls: ['product-list.component.scss']\n})\nexport class ProductListComponent implements OnInit {\n    @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n    @ViewChild(MatSort) sort!: MatSort;\n\n    displayedColumns: string[] = ['id', 'name', 'price', 'placedAt', 'sale','picture', 'category', 'select'];\n\n    products: Product[] = [];\n\n    dataSource!: MatTableDataSource<Product>;\n\n    selection = new SelectionModel<Product>(true, []);\n\n    constructor(private productsService: ProductsService, private router: Router) { }\n\n    ngOnInit() {\n        this.productsService.getAll().pipe().subscribe((products) => {\n            this.products = products;\n            this.dataSource = new MatTableDataSource<Product>(this.products);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n        });\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n          this.dataSource.paginator.firstPage();\n        }\n    }\n\n    removeSelectedRows() {\n        this.selection.selected.forEach((item) => {\n        const index: number = this.products.findIndex((d) => d === item);\n        this.products.splice(index,1);\n        this.productsService.delete(item.id);\n\n        this.dataSource = new MatTableDataSource<Product>(this.products);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    });\n    this.selection = new SelectionModel<Product>(true, []);\n    }\n\n    isAllSelected() {\n        const numSelected = this.selection.selected.length;\n        const numRows = this.dataSource.data.length;\n        return numSelected === numRows;\n    }\n\n    masterToggle() {\n        if(this.isAllSelected()) {\n            this.selection.clear()\n        }else {\n            this.dataSource.data.forEach((row) => this.selection.select(row));\n        }\n    }\n\n    navigateProductPage(id: number) {\n        this.router.navigate([`/products/${id}`]);\n    }\n\n    navigateCategoryPage(id: number) {\n        this.router.navigate([`/categories/${id}`]);\n    }\n}","<mat-form-field>\n    <mat-label>Фильтр</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n  </mat-form-field>\n  \n  <div class=\"mat-elevation-z8\">\n  \n    <button mat-raised-button color=\"primary\" (click)=\"removeSelectedRows()\" class=\"width\">\n      Удалить выбранные  строки\n    </button>\n  \n    <table mat-table [dataSource]=\"dataSource\" matSort>\n  \n      <ng-container matColumnDef=\"id\">\n        <th mat-componentheader-cell *matHeaderCellDef mat-sort-header> Id. </th>\n         \n        <td mat-cell *matCellDef=\"let element\" (click)=\"navigateProductPage(element.id)\" class=\"padding\" >\n          <button mat-button ><span class=\"material-icons\">edit</span> {{element.id}}</button> \n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Имя </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Цена </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.price}} </td>\n      </ng-container>\n  \n      <ng-container matColumnDef=\"placedAt\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Размещен</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.placedAt}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"sale\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Скидка </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.sale}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"picture\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Картинка </th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button mat-button *ngIf=\"element?.picture\">да</button> \n          <button mat-button *ngIf=\"!element?.picture\">нет</button> \n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"category\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Категория </th>\n        <td mat-cell *matCellDef=\"let element\" (click)=\"navigateCategoryPage(element.category?.id)\">\n          <button mat-button >{{element.category?.name}}</button> \n        </td>\n      </ng-container>\n  \n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef class=\"align\">\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell  *matCellDef=\"let row\" class=\"align\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  \n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"4\">Нет данных, соответствующих фильтру\"{{input.value}}\"</td>\n      </tr>\n    </table>\n  \n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n  \n    <button mat-raised-button color=\"primary\" routerLink=\"create\" class=\"width\">\n      Создать\n    </button>\n  </div>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n HttpRequest,\n HttpHandler,\n HttpEvent,\n HttpInterceptor\n} from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthenticationService } from '../services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService, private router: Router) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError((err) => {\n            if ([401].indexOf(err.status) !== -1) {\n                this.router.navigate([`/login`]);\n            }\n            if ([403].indexOf(err.status) !== -1) {\n                this.router.navigate([`/forbidden`]);\n            }\n            return throwError(err.error.errors[0].message);\n        }))\n    }\n}\n","export * from './header.component';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MainPageComponent } from './components/main-page';\nimport { LoginComponent } from './components/login';\nimport { Role } from './enums';\nimport { AuthGuard } from './utils/auth.guard';\nimport {\n  ProductListComponent,\n  ProductPageComponent,\n  ProductCreateComponent\n} from './components/products';\nimport {\n  UsersListComponent,\n  UserPageComponent\n} from './components/users';\n\nimport {\n  CategoryPageComponent,\n  CategoryListComponent,\n  CategoryCreateComponent\n} from './components/categories'\nimport {\n  OrderPageComponent,\n  OrderListComponent\n} from './components/orders';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainPageComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [Role.admin] },\n  },\n  {\n    path: 'categories',\n    component: CategoryListComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [Role.admin] },\n  },\n  {\n    path: 'categories/create',\n    component: CategoryCreateComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [Role.admin] },\n  },\n  {\n    path: 'categories/:id',\n    component: CategoryPageComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [Role.admin] },\n  },\n  {\n    path: 'users',\n    component: UsersListComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [Role.admin] },\n  },\n  {\n    path: 'users/:id',\n    component: UserPageComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [Role.admin] },\n  },\n  {\n    path: 'products',\n    component: ProductListComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [Role.admin] },\n  },\n  {\n    path: 'products/create',\n    component: ProductCreateComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [Role.admin] },\n  },\n  {\n    path: 'products/:id',\n    component: ProductPageComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [Role.admin] },\n  },\n  {\n    path: 'orders',\n    component: OrderListComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [Role.admin] },\n  },\n  {\n    path: 'orders/:id',\n    component: OrderPageComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [Role.admin] },\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnInit, Input} from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ProductsService } from 'src/app/services';\nimport { Product } from 'src/app/models';\n\n@Component({\n    selector: 'app-product-info',\n    templateUrl: 'product-info.component.html',\n    styleUrls: ['product-info.component.scss']\n})\nexport class ProductInfoComponent implements OnInit { \n\n    @Input() product!: Product;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private productsService: ProductsService,\n    ) {\n        \n    }\n\n    ngOnInit() {\n\n    }\n\n    navigateCategoryPage(id: number | undefined) {\n        this.router.navigate([`/categories/${id}`]);\n    }\n}","<mat-card class=\"example-card\" class=\"prod-app-card\">\n    <mat-card-header style=\"justify-content: center;\">\n        <mat-card-title >Информация</mat-card-title>\n      </mat-card-header>\n    <mat-card-header>\n      <mat-card-title>{{product?.id}}</mat-card-title>\n      <mat-card-subtitle>Id</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-header>\n        <mat-card-title>{{product?.name}}</mat-card-title>\n        <mat-card-subtitle>Имя</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-header>\n        <mat-card-title>{{product?.price}}</mat-card-title>\n        <mat-card-subtitle>Цена</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-header>\n        <mat-card-title>{{product?.sale}}</mat-card-title>\n        <mat-card-subtitle>Скидка</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-header>\n        <mat-card-title>{{product?.placedAt}}</mat-card-title>\n        <mat-card-subtitle>Размещен</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-header>\n        <mat-card-title (click)=\"navigateCategoryPage(product?.category?.id)\">{{product?.category?.name}}</mat-card-title>\n        <mat-card-subtitle>Категория</mat-card-subtitle>\n    </mat-card-header>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { FormGroup } from '@angular/forms';\nimport { Category } from '../models';\nimport { PATH_BACKEND_API } from '../constants';\n\n@Injectable({ providedIn: 'root' })\nexport class CategoriesService {\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get<Category[]>(`${PATH_BACKEND_API}/categories`);\n  }\n\n  getById(id: number) {\n    return this.http.get<Category>(`${PATH_BACKEND_API}/categories/${id}`);\n  }\n\n  delete(id: number) {\n     this.http.delete(`${PATH_BACKEND_API}/categories/${id}`).subscribe(() => {});\n  }\n\n  update(formGroup: FormGroup, idCategory: number) {\n    const body = {\n      name: formGroup.controls.name.value,\n    }\n    return this.http.put<Category>(`${PATH_BACKEND_API}/categories/${idCategory}`, body);\n  }\n\n  create(formGroup: FormGroup) {\n    const body = {\n      name: formGroup.controls.name.value,\n     }\n    return this.http.post<Category>(`${PATH_BACKEND_API}/categories`, body);\n  }\n\n  updatePic(data: FormData, id: number){\n    return this.http.put(`${PATH_BACKEND_API}/categories/${id}/pic`, data);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}